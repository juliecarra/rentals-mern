{"ast":null,"code":"var _jsxFileName = \"/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Booking/Booking.jsx\";\nimport React, { Component } from \"react\";\nimport { getRangeOfDates } from \"../../helpers\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport * as moment from \"moment\";\n\nclass Booking extends Component {\n  constructor() {\n    super(); //createRef() to display dates on screen\n\n    this.handleInvalidDates = date => {\n      return this.bookedOutDates.includes(date.format(\"Y/MM/DD\")) || date.diff(moment(), \"days\") < 0;\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        proposedBooking: {\n          guests: parseInt(e.target.value)\n        }\n      });\n    };\n\n    this.confirmReservation = () => {\n      this.setState({\n        modal: {\n          open: true\n        }\n      });\n    };\n\n    this.cancelReservation = () => {\n      this.setState({\n        modal: {\n          open: false\n        }\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.dateRef = React.createRef();\n    this.bookedOutDates = [];\n    this.state = {\n      proposedBooking: {\n        startAt: \"\",\n        endAt: \"\",\n        guests: \"\"\n      },\n      modal: {\n        open: false\n      }\n    };\n    this.handleEvent = this.handleEvent.bind(this);\n    this.handleInvalidDates = this.handleInvalidDates.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.confirmReservation = this.confirmReservation.bind(this);\n  }\n\n  componentWillMount() {\n    this.getBookedOutDates();\n  }\n\n  getBookedOutDates() {\n    const {\n      bookings\n    } = this.props.rental;\n\n    if (bookings && bookings.length > 0) {\n      bookings.forEach(booking => {\n        const dateRange = getRangeOfDates(booking.startAt, booking.endAt, \"Y/MM/DD\");\n        this.bookedOutDates.push(...dateRange);\n      });\n    }\n  } //check if the bookedOutDates includes the current date and check if the date is not a past date\n\n\n  handleEvent(event, picker) {\n    const startAt = picker.startDate.format(\"Y/MM/DD\");\n    const endAt = picker.endDate.format(\"Y/MM/DD\"); //value that we want to display with createRef()\n\n    this.dateRef.current.value = startAt + \" to \" + endAt;\n    this.setState({\n      proposedBooking: {\n        startAt,\n        endAt\n      }\n    });\n  }\n\n  render() {\n    const {\n      rental\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"booking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"booking-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"booking-per-night\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" $\", rental.dailyRate, \" \"), \"per night\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"dates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Dates\"), React.createElement(DateRangePicker, {\n      isInvalidDate: this.handleInvalidDates,\n      onEvent: this.handleEvent,\n      opens: \"left\",\n      containerStyles: {\n        display: \"block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: this.dateRef,\n      id: \"dates\",\n      type: \"text\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"guests\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Guests\"), React.createElement(\"input\", {\n      onChange: this.handleOnChange,\n      type: \"number\",\n      className: \"form-control\",\n      id: \"guests\",\n      \"aria-describedby\": \"guests\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.confirmReservation,\n      className: \"btn btn-rental btn-confirm btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Reserve\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"booking-note-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"People are interested into this house\"), React.createElement(\"p\", {\n      className: \"booking-note-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"More than 500 people checked this rental in last month.\"));\n  }\n\n}\n\nexport default Booking;","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Booking/Booking.jsx"],"names":["React","Component","getRangeOfDates","DateRangePicker","moment","Booking","constructor","handleInvalidDates","date","bookedOutDates","includes","format","diff","handleOnChange","e","setState","proposedBooking","guests","parseInt","target","value","confirmReservation","modal","open","cancelReservation","onCloseModal","dateRef","createRef","state","startAt","endAt","handleEvent","bind","componentWillMount","getBookedOutDates","bookings","props","rental","length","forEach","booking","dateRange","push","event","picker","startDate","endDate","current","render","dailyRate","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getRangeOfDates } from \"../../helpers\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport * as moment from \"moment\";\n\nclass Booking extends Component {\n  constructor() {\n    super();\n\n    //createRef() to display dates on screen\n    this.dateRef = React.createRef();\n    this.bookedOutDates = [];\n    this.state = {\n      proposedBooking: {\n        startAt: \"\",\n        endAt: \"\",\n        guests: \"\"\n      },\n      modal: {\n        open: false\n      }\n    };\n    this.handleEvent = this.handleEvent.bind(this);\n    this.handleInvalidDates = this.handleInvalidDates.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.confirmReservation = this.confirmReservation.bind(this);\n  }\n\n  componentWillMount() {\n    this.getBookedOutDates();\n  }\n\n  getBookedOutDates() {\n    const { bookings } = this.props.rental;\n\n    if (bookings && bookings.length > 0) {\n      bookings.forEach(booking => {\n        const dateRange = getRangeOfDates(\n          booking.startAt,\n          booking.endAt,\n          \"Y/MM/DD\"\n        );\n\n        this.bookedOutDates.push(...dateRange);\n      });\n    }\n  }\n\n  //check if the bookedOutDates includes the current date and check if the date is not a past date\n  handleInvalidDates = date => {\n    return (\n      this.bookedOutDates.includes(date.format(\"Y/MM/DD\")) ||\n      date.diff(moment(), \"days\") < 0\n    );\n  };\n\n  handleEvent(event, picker) {\n    const startAt = picker.startDate.format(\"Y/MM/DD\");\n    const endAt = picker.endDate.format(\"Y/MM/DD\");\n\n    //value that we want to display with createRef()\n    this.dateRef.current.value = startAt + \" to \" + endAt;\n    this.setState({\n      proposedBooking: {\n        startAt,\n        endAt\n      }\n    });\n  }\n\n  handleOnChange = e => {\n    this.setState({ proposedBooking: { guests: parseInt(e.target.value) } });\n  };\n\n  confirmReservation = () => {\n    this.setState({ modal: { open: true } });\n  };\n\n  cancelReservation = () => {\n    this.setState({ modal: { open: false } });\n  };\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { rental } = this.props;\n    return (\n      <div className=\"booking\">\n        <h3 className=\"booking-price\">\n          <span className=\"booking-per-night\">\n            <span className=\"price\"> ${rental.dailyRate} </span>per night\n          </span>\n        </h3>\n        <hr></hr>\n        <div className=\"form-group\">\n          <label htmlFor=\"dates\">Dates</label>\n          <DateRangePicker\n            isInvalidDate={this.handleInvalidDates}\n            onEvent={this.handleEvent}\n            opens=\"left\"\n            containerStyles={{ display: \"block\" }}\n          >\n            <input\n              ref={this.dateRef}\n              id=\"dates\"\n              type=\"text\"\n              className=\"form-control\"\n            ></input>\n          </DateRangePicker>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"guests\">Guests</label>\n          <input\n            onChange={this.handleOnChange}\n            type=\"number\"\n            className=\"form-control\"\n            id=\"guests\"\n            aria-describedby=\"guests\"\n            placeholder=\"\"\n          />\n        </div>\n        <button\n          onClick={this.confirmReservation}\n          className=\"btn btn-rental btn-confirm btn-block\"\n        >\n          Reserve\n        </button>\n        <hr></hr>\n        <p className=\"booking-note-title\">\n          People are interested into this house\n        </p>\n        <p className=\"booking-note-text\">\n          More than 500 people checked this rental in last month.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Booking;\n"]},"metadata":{},"sourceType":"module"}
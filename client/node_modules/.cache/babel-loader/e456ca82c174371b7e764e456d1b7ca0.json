{"ast":null,"code":"var _jsxFileName = \"/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Signup/SignupForm.jsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  className,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  className: \"form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  className: \"input-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  className: className,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n})), touched && error && React.createElement(\"div\", {\n  className: \"alert alert-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, error)));\n\nconst SignupForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    submitCb\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(submitCb),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Username\",\n    name: \"username\",\n    component: renderField,\n    type: \"text\",\n    placeholder: \"Username\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Email\",\n    name: \"email\",\n    component: renderField,\n    type: \"email\",\n    placeholder: \"Email address\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Password\",\n    name: \"password\",\n    component: renderField,\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Password Confirmation\",\n    name: \"passwordConfirmation\",\n    component: renderField,\n    type: \"password\",\n    placeholder: \"Password confirmation\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.passwordConfirmation) {\n    errors.password = \"Required\";\n  } else if (values.password !== values.passwordConfirmation) {\n    errors.password = \"Passwords must be the same\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signupForm\",\n  // a unique identifier for this form\n  validate\n})(SignupForm);","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Signup/SignupForm.jsx"],"names":["React","Field","reduxForm","renderField","input","label","type","className","meta","touched","error","warning","SignupForm","props","handleSubmit","pristine","reset","submitting","submitCb","validate","values","errors","username","length","email","test","passwordConfirmation","password","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  className,\n  meta: { touched, error, warning }\n}) => (\n  <div className=\"form-group\">\n    <label>{label}</label>\n    <div className=\"input-group\">\n      <input {...input} placeholder={label} type={type} className={className} />\n      {touched && error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  </div>\n);\n\nconst SignupForm = props => {\n  const { handleSubmit, pristine, reset, submitting, submitCb } = props;\n  return (\n    <form onSubmit={handleSubmit(submitCb)}>\n      <div>\n        {/* <label>Username</label> */}\n        <div>\n          <Field\n            label=\"Username\"\n            name=\"username\"\n            component={renderField}\n            type=\"text\"\n            placeholder=\"Username\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        {/* <label>Email</label> */}\n        <div>\n          <Field\n            label=\"Email\"\n            name=\"email\"\n            component={renderField}\n            type=\"email\"\n            placeholder=\"Email address\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        {/* <label>Password</label> */}\n        <div>\n          <Field\n            label=\"Password\"\n            name=\"password\"\n            component={renderField}\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        {/* <label>Password Confirmation</label> */}\n        <div>\n          <Field\n            label=\"Password Confirmation\"\n            name=\"passwordConfirmation\"\n            component={renderField}\n            type=\"password\"\n            placeholder=\"Password confirmation\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        <button className=\"btn\" type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst validate = values => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.passwordConfirmation) {\n    errors.password = \"Required\";\n  } else if (values.password !== values.passwordConfirmation) {\n    errors.password = \"Passwords must be the same\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signupForm\", // a unique identifier for this form\n  validate\n})(SignupForm);\n"]},"metadata":{},"sourceType":"module"}
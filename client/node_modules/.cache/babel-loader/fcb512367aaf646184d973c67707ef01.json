{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { FETCH_RENTALS_INIT, FETCH_RENTALS, FETCH_RENTALS_BY_ID, GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nexport const fetchRentals = city => async dispatch => {\n  // axios.get(\"http://localhost:8080/api/rentals\").then(rentals => {\n  //   dispatch({ type: FETCH_RENTALS, rentals });\n  // });\n  try {\n    const url = city ? `/api/rentals?city=${city}` : \"/api/rentals\";\n    dispatch({\n      type: FETCH_RENTALS_INIT\n    });\n    const res = await axios.get(\"/api/rentals\"); // debugger;\n\n    dispatch({\n      type: FETCH_RENTALS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const fetchRentalsById = rentalId => async dispatch => {\n  // axios.get(` http://localhost:8080/api/rentals/${rentalId}`).then(rental => {\n  //   dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  // });\n  // const rental = rentals.find(rental => rental.id === Number(rentalId));\n  // dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  const res = await axios.get(`/api/rentals/${rentalId}`);\n  dispatch({\n    type: FETCH_RENTALS_BY_ID,\n    payload: res.data\n  });\n}; // user actions\n\nexport const registerUser = (userData, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/signup\", userData);\n    history.push(\"/login\"); //If we manage to register, we are redirected to login\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", userData); // Save to localStorage\n\n    const {\n      token\n    } = res.data; // Set token to ls\n\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n}; //booking actions\n\nexport const createBooking = booking => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/bookings\", booking); // debugger;\n\n    dispatch({\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/actions/index.js"],"names":["axios","setAuthToken","jwt_decode","FETCH_RENTALS_INIT","FETCH_RENTALS","FETCH_RENTALS_BY_ID","GET_ERRORS","SET_CURRENT_USER","fetchRentals","city","dispatch","url","type","res","get","payload","data","error","response","fetchRentalsById","rentalId","registerUser","userData","history","post","push","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem","createBooking","booking"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  FETCH_RENTALS_INIT,\n  FETCH_RENTALS,\n  FETCH_RENTALS_BY_ID,\n  GET_ERRORS,\n  SET_CURRENT_USER\n} from \"./types\";\n\nexport const fetchRentals = city => async dispatch => {\n  // axios.get(\"http://localhost:8080/api/rentals\").then(rentals => {\n  //   dispatch({ type: FETCH_RENTALS, rentals });\n  // });\n\n  try {\n    const url = city ? `/api/rentals?city=${city}` : \"/api/rentals\";\n\n    dispatch({ type: FETCH_RENTALS_INIT });\n\n    const res = await axios.get(\"/api/rentals\");\n    // debugger;\n    dispatch({ type: FETCH_RENTALS, payload: res.data });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const fetchRentalsById = rentalId => async dispatch => {\n  // axios.get(` http://localhost:8080/api/rentals/${rentalId}`).then(rental => {\n  //   dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  // });\n\n  // const rental = rentals.find(rental => rental.id === Number(rentalId));\n  // dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n\n  const res = await axios.get(`/api/rentals/${rentalId}`);\n  dispatch({ type: FETCH_RENTALS_BY_ID, payload: res.data });\n};\n\n// user actions\nexport const registerUser = (userData, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/signup\", userData);\n    history.push(\"/login\"); //If we manage to register, we are redirected to login\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", userData);\n\n    // Save to localStorage\n    const { token } = res.data;\n    // Set token to ls\n    localStorage.setItem(\"jwtToken\", token);\n    // Set token to Auth header\n    setAuthToken(token);\n    // Decode token to get user data\n    const decoded = jwt_decode(token);\n    // Set current user\n    dispatch(setCurrentUser(decoded));\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\n//booking actions\nexport const createBooking = booking => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/bookings\", booking);\n    // debugger;\n    dispatch({ payload: res.data });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
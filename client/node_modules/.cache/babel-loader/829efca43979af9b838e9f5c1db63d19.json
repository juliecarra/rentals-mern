{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { FETCH_RENTALS, FETCH_RENTALS_BY_ID, GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nexport const fetchRentals = () => async dispatch => {\n  // axios.get(\"http://localhost:8080/api/rentals\").then(rentals => {\n  //   dispatch({ type: FETCH_RENTALS, rentals });\n  // });\n  const res = await axios.get(\"/api/rentals\"); // debugger;\n\n  dispatch({\n    type: FETCH_RENTALS,\n    payload: res.data\n  });\n};\nexport const fetchRentalsById = rentalId => async dispatch => {\n  // axios.get(` http://localhost:8080/api/rentals/${rentalId}`).then(rental => {\n  //   dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  // });\n  // const rental = rentals.find(rental => rental.id === Number(rentalId));\n  // dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  const res = await axios.get(`/api/rentals/${rentalId}`);\n  dispatch({\n    type: FETCH_RENTALS_BY_ID,\n    payload: res.data\n  });\n}; // user actions\n\nexport const registerUser = (userData, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/signup\", userData);\n    history.push(\"/login\"); //If we manage to register, we are redirected to login\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", userData); // Save to localStorage\n\n    const {\n      token\n    } = res.data; // Set token to ls\n\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n}; //booking actions\n\nexport const createBooking = booking => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/bookings\", booking); // debugger;\n\n    dispatch({\n      payload: res.data\n    });\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/actions/index.js"],"names":["axios","setAuthToken","jwt_decode","FETCH_RENTALS","FETCH_RENTALS_BY_ID","GET_ERRORS","SET_CURRENT_USER","fetchRentals","dispatch","res","get","type","payload","data","fetchRentalsById","rentalId","registerUser","userData","history","post","push","error","response","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem","createBooking","booking","console","log","status","headers"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  FETCH_RENTALS,\n  FETCH_RENTALS_BY_ID,\n  GET_ERRORS,\n  SET_CURRENT_USER\n} from \"./types\";\n\nexport const fetchRentals = () => async dispatch => {\n  // axios.get(\"http://localhost:8080/api/rentals\").then(rentals => {\n  //   dispatch({ type: FETCH_RENTALS, rentals });\n  // });\n\n  const res = await axios.get(\"/api/rentals\");\n  // debugger;\n  dispatch({ type: FETCH_RENTALS, payload: res.data });\n};\n\nexport const fetchRentalsById = rentalId => async dispatch => {\n  // axios.get(` http://localhost:8080/api/rentals/${rentalId}`).then(rental => {\n  //   dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  // });\n\n  // const rental = rentals.find(rental => rental.id === Number(rentalId));\n  // dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n\n  const res = await axios.get(`/api/rentals/${rentalId}`);\n  dispatch({ type: FETCH_RENTALS_BY_ID, payload: res.data });\n};\n\n// user actions\nexport const registerUser = (userData, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/signup\", userData);\n    history.push(\"/login\"); //If we manage to register, we are redirected to login\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", userData);\n\n    // Save to localStorage\n    const { token } = res.data;\n    // Set token to ls\n    localStorage.setItem(\"jwtToken\", token);\n    // Set token to Auth header\n    setAuthToken(token);\n    // Decode token to get user data\n    const decoded = jwt_decode(token);\n    // Set current user\n    dispatch(setCurrentUser(decoded));\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\n//booking actions\nexport const createBooking = booking => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/bookings\", booking);\n    // debugger;\n    dispatch({ payload: res.data });\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
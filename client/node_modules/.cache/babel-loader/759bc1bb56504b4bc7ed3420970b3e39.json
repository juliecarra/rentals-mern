{"ast":null,"code":"var _jsxFileName = \"/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Signup/SignupForm.jsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst SignupForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    submitCb\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(submitCb),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"Username\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    component: \"input\",\n    type: \"email\",\n    placeholder: \"Email address\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"password\",\n    component: \"input\",\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.age) {\n    errors.age = \"Required\";\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \"Must be a number\";\n  } else if (Number(values.age) < 18) {\n    errors.age = \"Sorry, you must be at least 18 years old\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signupForm\",\n  // a unique identifier for this form\n  validate\n})(SignupForm);","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Signup/SignupForm.jsx"],"names":["React","Field","reduxForm","SignupForm","props","handleSubmit","pristine","reset","submitting","submitCb","validate","values","errors","username","length","email","test","age","isNaN","Number","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,UAAjC;AAA6CC,IAAAA;AAA7C,MAA0DL,KAAhE;AACA,SACE;AAAM,IAAA,QAAQ,EAAEC,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,UAJd;AAKE,IAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,eAJd;AAKE,IAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAbF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,UAJd;AAKE,IAAA,SAAS,EAAC,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAzBF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,QAAQ,EAAEH,QAAQ,IAAIE,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CArCF,CADF;AA6CD,CA/CD;;AAiDA,MAAME,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AACpBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACD,GAFD,MAEO,IAAIF,MAAM,CAACE,QAAP,CAAgBC,MAAhB,GAAyB,EAA7B,EAAiC;AACtCF,IAAAA,MAAM,CAACC,QAAP,GAAkB,+BAAlB;AACD;;AACD,MAAI,CAACF,MAAM,CAACI,KAAZ,EAAmB;AACjBH,IAAAA,MAAM,CAACG,KAAP,GAAe,UAAf;AACD,GAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDL,MAAM,CAACI,KAAxD,CAAL,EAAqE;AAC1EH,IAAAA,MAAM,CAACG,KAAP,GAAe,uBAAf;AACD;;AACD,MAAI,CAACJ,MAAM,CAACM,GAAZ,EAAiB;AACfL,IAAAA,MAAM,CAACK,GAAP,GAAa,UAAb;AACD,GAFD,MAEO,IAAIC,KAAK,CAACC,MAAM,CAACR,MAAM,CAACM,GAAR,CAAP,CAAT,EAA+B;AACpCL,IAAAA,MAAM,CAACK,GAAP,GAAa,kBAAb;AACD,GAFM,MAEA,IAAIE,MAAM,CAACR,MAAM,CAACM,GAAR,CAAN,GAAqB,EAAzB,EAA6B;AAClCL,IAAAA,MAAM,CAACK,GAAP,GAAa,0CAAb;AACD;;AACD,SAAOL,MAAP;AACD,CApBD;;AAsBA,eAAeV,SAAS,CAAC;AACvBkB,EAAAA,IAAI,EAAE,YADiB;AACH;AACpBV,EAAAA;AAFuB,CAAD,CAAT,CAGZP,UAHY,CAAf","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst SignupForm = props => {\n  const { handleSubmit, pristine, reset, submitting, submitCb } = props;\n  return (\n    <form onSubmit={handleSubmit(submitCb)}>\n      <div>\n        <label>Username</label>\n        <div>\n          <Field\n            name=\"username\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Username\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Email</label>\n        <div>\n          <Field\n            name=\"email\"\n            component=\"input\"\n            type=\"email\"\n            placeholder=\"Email address\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Password</label>\n        <div>\n          <Field\n            name=\"password\"\n            component=\"input\"\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n      <div>\n        <button className=\"btn\" type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst validate = values => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.age) {\n    errors.age = \"Required\";\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \"Must be a number\";\n  } else if (Number(values.age) < 18) {\n    errors.age = \"Sorry, you must be at least 18 years old\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signupForm\", // a unique identifier for this form\n  validate\n})(SignupForm);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { FETCH_RENTALS, FETCH_RENTALS_BY_ID, GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nexport const fetchRentals = () => async dispatch => {\n  // axios.get(\"http://localhost:8080/api/rentals\").then(rentals => {\n  //   dispatch({ type: FETCH_RENTALS, rentals });\n  // });\n  const res = await axios.get(\"/api/rentals\"); // debugger;\n\n  dispatch({\n    type: FETCH_RENTALS,\n    payload: res.data\n  });\n};\nexport const fetchRentalsById = rentalId => async dispatch => {\n  // axios.get(` http://localhost:8080/api/rentals/${rentalId}`).then(rental => {\n  //   dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  // });\n  // const rental = rentals.find(rental => rental.id === Number(rentalId));\n  // dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  const res = await axios.get(`/api/rentals/${rentalId}`);\n  dispatch({\n    type: FETCH_RENTALS_BY_ID,\n    payload: res.data\n  });\n}; // user actions\n// export const signupUser = userData => async dispatch => {\n//   try {\n//     const res = await axios.post(\"/api/users/signup\", { ...userData });\n//     dispatch({ payload: res.data });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const register = userData => {\n  return axios.post(\"/api/users/signup\", userData).then(res => res.data, error => Promise.reject(error.response.data.errors));\n};\nexport const registerUser = (userData, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/signup\", userData);\n    history.push(\"/login\"); //If we manage to register, we are redirected to login\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // Login - Get User Token\n\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", userData); // Save to localStorage\n\n    const {\n      token\n    } = res.data; // Set token to ls\n\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/actions/index.js"],"names":["axios","setAuthToken","jwt_decode","FETCH_RENTALS","FETCH_RENTALS_BY_ID","GET_ERRORS","SET_CURRENT_USER","fetchRentals","dispatch","res","get","type","payload","data","fetchRentalsById","rentalId","register","userData","post","then","error","Promise","reject","response","errors","registerUser","history","push","loginUser","token","localStorage","setItem","decoded","setCurrentUser"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  FETCH_RENTALS,\n  FETCH_RENTALS_BY_ID,\n  GET_ERRORS,\n  SET_CURRENT_USER\n} from \"./types\";\n\nexport const fetchRentals = () => async dispatch => {\n  // axios.get(\"http://localhost:8080/api/rentals\").then(rentals => {\n  //   dispatch({ type: FETCH_RENTALS, rentals });\n  // });\n\n  const res = await axios.get(\"/api/rentals\");\n  // debugger;\n  dispatch({ type: FETCH_RENTALS, payload: res.data });\n};\n\nexport const fetchRentalsById = rentalId => async dispatch => {\n  // axios.get(` http://localhost:8080/api/rentals/${rentalId}`).then(rental => {\n  //   dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n  // });\n\n  // const rental = rentals.find(rental => rental.id === Number(rentalId));\n  // dispatch({ type: FETCH_RENTALS_BY_ID, rental });\n\n  const res = await axios.get(`/api/rentals/${rentalId}`);\n  dispatch({ type: FETCH_RENTALS_BY_ID, payload: res.data });\n};\n\n// user actions\n\n// export const signupUser = userData => async dispatch => {\n//   try {\n//     const res = await axios.post(\"/api/users/signup\", { ...userData });\n//     dispatch({ payload: res.data });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const register = userData => {\n  return axios.post(\"/api/users/signup\", userData).then(\n    res => res.data,\n    error => Promise.reject(error.response.data.errors)\n  );\n};\n\nexport const registerUser = (userData, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/signup\", userData);\n    history.push(\"/login\"); //If we manage to register, we are redirected to login\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\n// Login - Get User Token\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", userData);\n\n    // Save to localStorage\n    const { token } = res.data;\n    // Set token to ls\n    localStorage.setItem(\"jwtToken\", token);\n    // Set token to Auth header\n    setAuthToken(token);\n    // Decode token to get user data\n    const decoded = jwt_decode(token);\n    // Set current user\n    dispatch(setCurrentUser(decoded));\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
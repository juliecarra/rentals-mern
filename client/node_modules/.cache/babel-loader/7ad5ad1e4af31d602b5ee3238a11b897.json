{"ast":null,"code":"var _jsxFileName = \"/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Signup/SignupForm.jsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderField } from \"./shared/form/input\";\nimport { Errors } from \"./shared/form/errors\";\n\nconst SignupForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    submitCb,\n    valid,\n    errors\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(submitCb),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Username\",\n    name: \"username\",\n    component: renderField,\n    type: \"text\",\n    placeholder: \"Username\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Email\",\n    name: \"email\",\n    component: renderField,\n    type: \"email\",\n    placeholder: \"Email address\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Password\",\n    name: \"password\",\n    component: renderField,\n    type: \"password\",\n    placeholder: \"Password\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Field, {\n    label: \"Password Confirmation\",\n    name: \"passwordConfirmation\",\n    component: renderField,\n    type: \"password\",\n    placeholder: \"Password confirmation\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    disabled: !valid || pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Submit\"), errors.length > 0 && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.map((error, index) => React.createElement(\"p\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \" \", error.detail, \" \"))), \")\"));\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length < 5) {\n    errors.username = \"Must be at least 5 characters or more\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.passwordConfirmation) {\n    errors.password = \"Required\";\n  } else if (values.password !== values.passwordConfirmation) {\n    errors.password = \"Passwords must be the same\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signupForm\",\n  // a unique identifier for this form\n  validate\n})(SignupForm);","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/server/client/src/components/Signup/SignupForm.jsx"],"names":["React","Field","reduxForm","renderField","Errors","SignupForm","props","handleSubmit","pristine","reset","submitting","submitCb","valid","errors","length","map","error","index","detail","validate","values","username","email","test","passwordConfirmation","password","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderField } from \"./shared/form/input\";\nimport { Errors } from \"./shared/form/errors\";\n\nconst SignupForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    submitCb,\n    valid,\n    errors\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit(submitCb)}>\n      <div>\n        <Field\n          label=\"Username\"\n          name=\"username\"\n          component={renderField}\n          type=\"text\"\n          placeholder=\"Username\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <Field\n          label=\"Email\"\n          name=\"email\"\n          component={renderField}\n          type=\"email\"\n          placeholder=\"Email address\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <Field\n          label=\"Password\"\n          name=\"password\"\n          component={renderField}\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <Field\n          label=\"Password Confirmation\"\n          name=\"passwordConfirmation\"\n          component={renderField}\n          type=\"password\"\n          placeholder=\"Password confirmation\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div>\n        <button\n          className=\"btn\"\n          type=\"submit\"\n          disabled={!valid || pristine || submitting}\n        >\n          Submit\n        </button>\n        {/* <Errors errors={errors} /> */}\n        {errors.length > 0 && (\n          <div className=\"alert alert-danger\">\n            {errors.map((error, index) => (\n              <p key={index}> {error.detail} </p>\n            ))}\n          </div>\n        )}\n        )\n      </div>\n    </form>\n  );\n};\n\nconst validate = values => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length < 5) {\n    errors.username = \"Must be at least 5 characters or more\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.passwordConfirmation) {\n    errors.password = \"Required\";\n  } else if (values.password !== values.passwordConfirmation) {\n    errors.password = \"Passwords must be the same\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signupForm\", // a unique identifier for this form\n  validate\n})(SignupForm);\n"]},"metadata":{},"sourceType":"module"}
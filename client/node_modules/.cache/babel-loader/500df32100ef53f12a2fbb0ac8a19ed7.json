{"ast":null,"code":"var _jsxFileName = \"/Users/Julie-Marie-Carra/Desktop/cmu/server/client/src/components/Payment/PaymentCheckoutForm.jsx\";\nimport React, { Component } from \"react\";\nimport { injectStripe, CardElement } from \"react-stripe-elements\"; //Style for CardElement\n\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: \"15px\",\n        color: \"#424770\",\n        letterSpacing: \"0.025em\",\n        fontFamily: \"\",\n        \"::placeholder\": {\n          color: \"#aab7c4\"\n        }\n      },\n      invalid: {\n        color: \"#9e2146\"\n      }\n    }\n  };\n};\n\nconst formStyle = () => {\n  return {\n    style: {\n      height: \"100px\",\n      backgroundColor: \"#fbfbfb\",\n      padding: \"5px\",\n      marginTop: \"15px\"\n    }\n  };\n};\n\nconst buttonStyle = () => {\n  return {\n    style: {\n      marginTop: \"15px\"\n    }\n  };\n};\n\nconst paragraphStyle = () => {\n  return {\n    style: {\n      marginTop: \"5px\",\n      fontSize: \"11px\",\n      color: \"#aab7c4\"\n    }\n  };\n};\n\nclass PaymentCheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const {\n        stripe,\n        setPaymentToken\n      } = this.props;\n      debugger;\n      e.preventDefault();\n\n      if (stripe) {\n        stripe.createToken().then(payload => {\n          if (payload.error) {\n            //   setPaymentToken(undefined);\n            return this.setState({\n              error: payload.error.message\n            });\n          } // setPaymentToken(payload.token.id);\n\n        });\n      } else {\n        console.error(\"Stripe.js hasn't loaded yet!\");\n      }\n    };\n\n    this.state = {\n      error: undefined\n    };\n  }\n\n  render() {\n    const {\n      error\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"PaymentCheckoutForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", Object.assign({\n      onSubmit: this.handleSubmit\n    }, formStyle(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(CardElement, Object.assign({}, createOptions(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"p\", Object.assign({}, paragraphStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"You will not be charged yet\"), error && React.createElement(\"div\", {\n      className: \"alert alert-danger alert-payment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, error), React.createElement(\"button\", Object.assign({\n      className: \"btn btn-success\"\n    }, buttonStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \"Confirm Payment\")));\n  }\n\n}\n\nexport default injectStripe(PaymentCheckoutForm);","map":{"version":3,"sources":["/Users/Julie-Marie-Carra/Desktop/cmu/server/client/src/components/Payment/PaymentCheckoutForm.jsx"],"names":["React","Component","injectStripe","CardElement","createOptions","style","base","fontSize","color","letterSpacing","fontFamily","invalid","formStyle","height","backgroundColor","padding","marginTop","buttonStyle","paragraphStyle","PaymentCheckoutForm","constructor","props","handleSubmit","e","stripe","setPaymentToken","preventDefault","createToken","then","payload","error","setState","message","console","state","undefined","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { injectStripe, CardElement } from \"react-stripe-elements\";\n\n//Style for CardElement\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: \"15px\",\n        color: \"#424770\",\n        letterSpacing: \"0.025em\",\n        fontFamily: \"\",\n        \"::placeholder\": {\n          color: \"#aab7c4\"\n        }\n      },\n      invalid: {\n        color: \"#9e2146\"\n      }\n    }\n  };\n};\n\nconst formStyle = () => {\n  return {\n    style: {\n      height: \"100px\",\n      backgroundColor: \"#fbfbfb\",\n      padding: \"5px\",\n      marginTop: \"15px\"\n    }\n  };\n};\n\nconst buttonStyle = () => {\n  return {\n    style: {\n      marginTop: \"15px\"\n    }\n  };\n};\n\nconst paragraphStyle = () => {\n  return {\n    style: {\n      marginTop: \"5px\",\n      fontSize: \"11px\",\n      color: \"#aab7c4\"\n    }\n  };\n};\n\nclass PaymentCheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: undefined\n    };\n  }\n\n  handleSubmit = e => {\n    const { stripe, setPaymentToken } = this.props;\n    debugger;\n    e.preventDefault();\n\n    if (stripe) {\n      stripe.createToken().then(payload => {\n        if (payload.error) {\n          //   setPaymentToken(undefined);\n          return this.setState({ error: payload.error.message });\n        }\n\n        // setPaymentToken(payload.token.id);\n      });\n    } else {\n      console.error(\"Stripe.js hasn't loaded yet!\");\n    }\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <div className=\"PaymentCheckoutForm\">\n        <form onSubmit={this.handleSubmit} {...formStyle()}>\n          <CardElement {...createOptions()} />\n          <p {...paragraphStyle}>You will not be charged yet</p>\n          {error && (\n            <div className=\"alert alert-danger alert-payment\">{error}</div>\n          )}\n\n          <button className=\"btn btn-success\" {...buttonStyle}>\n            Confirm Payment\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default injectStripe(PaymentCheckoutForm);\n"]},"metadata":{},"sourceType":"module"}